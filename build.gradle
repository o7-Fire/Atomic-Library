buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://dl.bintray.com/konsoletyper/teavm" }
        google()
    }
}


allprojects {



    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://dl.bintray.com/konsoletyper/teavm" }
        google()
        maven{ url 'https://www.jitpack.io' }
    }

}


subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: "maven"
    apply plugin: "maven-publish"

    group 'com.o7-Fire'
    version '2.0.1'

    ext {
        smh = {
            delete "src-gen/"
            delete "build/"
        }
    }
    ext.aproj = { String module ->
        if (findProject(module) != null) {
            return project(module)
        } else {
            return project(":Atom" + module)
        }
    }

    compileJava {
        options.fork = true
        options.incremental = true
    }

    task pre {
        smh()
    }
    dependencies {


    }
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
    artifacts {
        archives sourcesJar
    }
    tasks.withType(JavaCompile) {
        new File(projectDir, "resources/").mkdirs()
        new File(projectDir, "src/").mkdirs()
        new File(projectDir, "src-gen/").mkdirs()
        sourceSets.main.resources.srcDirs = ["resources/"]
        sourceSets.main.java.srcDirs = ["src/", "src-gen/"]
        options.annotationProcessorGeneratedSourcesDirectory = file("src-gen/")


        options.encoding = "UTF-8"

    }

}
